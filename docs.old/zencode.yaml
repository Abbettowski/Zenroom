#
# list generated from zenroom/src/lua/*zencode_*.lua running
# parse_zencode.sh
#

simple:
  - {when: 'I create my new keypair'}
  - {when: 'I generate my keys'}
  - {when: 'I encrypt the '''' to '''' for '''''}
  - {when: 'I decrypt the '''' to '''''}
  - {when: 'I sign the draft as '''''}
  - {when: 'I verify the '''' is authentic'}
data:
  - {then: 'print '''' '''''}
  - {then: 'print all data'}
  - {then: 'print my data'}
  - {then: 'print my '''''}
  - {then: 'print my draft'}
  - {then: 'print as '''' my draft'}
  - {then: 'print my draft as '''''}
  - {then: 'print as '''' my '''''}
  - {then: 'print the '''''}
  - {then: 'print as '''' the '''''}
  - {then: 'print as '''' the '''' inside '''''}
coconut:
  - {when: 'I create my new credential keypair'}
  - {when: 'I create my new credential request keypair'}
  - {when: 'I create my new keypair'}
  - {when: 'I create my new issuer keypair'}
  - {when: 'I create my new authority keypair'}
  - {when: 'I generate a credential signature request'}
  - {when: 'I sign the credential'}
  - {when: 'I aggregate the credential in '''''}
  - {when: 'I aggregate verifiers from '''''}
  - {when: 'I generate a credential proof'}
  - {when: 'I verify the credential proof is correct'}
  - {when: 'I generate a petition '''''}
  - {when: 'I verify the new petition to be empty'}
  - {when: 'I sign the petition '''''}
  - {when: 'I verify the signature proof is correct'}
  - {when: 'the petition signature is not a duplicate'}
  - {when: 'the petition signature is just one more'}
  - {when: 'I add the signature to the petition'}
  - {when: 'I tally the petition'}
  - {when: 'I count the petition results'}
